// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BombPlane_proto.proto

#ifndef PROTOBUF_BombPlane_5fproto_2eproto__INCLUDED
#define PROTOBUF_BombPlane_5fproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace bombplane_proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_BombPlane_5fproto_2eproto();
void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

class BombRequest;
class BombResponse;
class Coordinate;
class GamecrushNotification;
class GameoverNotification;
class GamestartNotification;
class GuessRequest;
class GuessResponse;
class InitposNotification;
class InviteRequest;
class InviteResponse;
class LoginRequest;
class LoginResponse;
class Message;
class OnlineUser;
class OnlinelistNotification;
class PlaneLocator;
class UpdateonlineBroadcast;
class UpdateroomBroadcast;

enum LoginResponse_LoginState {
  LoginResponse_LoginState_SUCCESS = 0,
  LoginResponse_LoginState_SUCCESS_KICK = 1,
  LoginResponse_LoginState_NOT_EXIST = 3,
  LoginResponse_LoginState_WRONG_PASSWORD = 4,
  LoginResponse_LoginState_SERVER_ERROR = 5,
  LoginResponse_LoginState_LoginResponse_LoginState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginResponse_LoginState_LoginResponse_LoginState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginResponse_LoginState_IsValid(int value);
const LoginResponse_LoginState LoginResponse_LoginState_LoginState_MIN = LoginResponse_LoginState_SUCCESS;
const LoginResponse_LoginState LoginResponse_LoginState_LoginState_MAX = LoginResponse_LoginState_SERVER_ERROR;
const int LoginResponse_LoginState_LoginState_ARRAYSIZE = LoginResponse_LoginState_LoginState_MAX + 1;

enum BombResponse_BOMB_RESULT {
  BombResponse_BOMB_RESULT_MISS = 0,
  BombResponse_BOMB_RESULT_HIT = 1,
  BombResponse_BOMB_RESULT_DESTORYED = 2,
  BombResponse_BOMB_RESULT_BombResponse_BOMB_RESULT_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BombResponse_BOMB_RESULT_BombResponse_BOMB_RESULT_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BombResponse_BOMB_RESULT_IsValid(int value);
const BombResponse_BOMB_RESULT BombResponse_BOMB_RESULT_BOMB_RESULT_MIN = BombResponse_BOMB_RESULT_MISS;
const BombResponse_BOMB_RESULT BombResponse_BOMB_RESULT_BOMB_RESULT_MAX = BombResponse_BOMB_RESULT_DESTORYED;
const int BombResponse_BOMB_RESULT_BOMB_RESULT_ARRAYSIZE = BombResponse_BOMB_RESULT_BOMB_RESULT_MAX + 1;

enum GamecrushNotification_CrushReason {
  GamecrushNotification_CrushReason_OPPONENT_OFF = 0,
  GamecrushNotification_CrushReason_SERVER_ERROR = 1,
  GamecrushNotification_CrushReason_GamecrushNotification_CrushReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GamecrushNotification_CrushReason_GamecrushNotification_CrushReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GamecrushNotification_CrushReason_IsValid(int value);
const GamecrushNotification_CrushReason GamecrushNotification_CrushReason_CrushReason_MIN = GamecrushNotification_CrushReason_OPPONENT_OFF;
const GamecrushNotification_CrushReason GamecrushNotification_CrushReason_CrushReason_MAX = GamecrushNotification_CrushReason_SERVER_ERROR;
const int GamecrushNotification_CrushReason_CrushReason_ARRAYSIZE = GamecrushNotification_CrushReason_CrushReason_MAX + 1;

enum Type {
  UNKNOWN = 0,
  QUIT_NOTIFICATION = 101,
  KEEPALIVE_REQUEST = 102,
  KEEPALIVE_RESPONSE = 103,
  KICK_NOTIFICATION = 104,
  ERROR_NOTIFICATION = 105,
  LOGIN_REQUEST = 201,
  LOGIN_RESPONSE = 202,
  ONLINELIST_NOTIFICATION = 203,
  UPDATEONLINE_BROADCAST = 204,
  INVITE_REQUEST = 301,
  INVITE_RESPONSE = 302,
  UPDATEROOM_BROADCAST = 303,
  INITPOS_NOTIFICATION = 403,
  GAMESTART_NOTIFICATION = 404,
  BOMB_REQUEST = 405,
  BOMB_RESPONSE = 406,
  GUESS_REQUEST = 407,
  GUESS_RESPONSE = 408,
  GAMEOVER_NOTIFICATION = 409,
  GAMECRUSH_NOTIFICATION = 410,
  EXITGAME_NOTIFICATION = 411,
  Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Type_IsValid(int value);
const Type Type_MIN = UNKNOWN;
const Type Type_MAX = EXITGAME_NOTIFICATION;
const int Type_ARRAYSIZE = Type_MAX + 1;

// ===================================================================

class Message : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  static const Message& default_instance();

  enum BodyCase {
    kLoginrequest = 201,
    kLoginresponse = 202,
    kOnlinelistnotification = 203,
    kUpdateonlinebroadcast = 204,
    kInviterequest = 301,
    kInviteresponse = 302,
    kUpdateroombroadcast = 303,
    kInitposnotification = 403,
    kGamestartnotification = 404,
    kBombrequest = 405,
    kBombresponse = 406,
    kGuessrequest = 407,
    kGuessresponse = 408,
    kGameovernotification = 409,
    kGamecrushnotification = 410,
    BODY_NOT_SET = 0,
  };

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Message* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bombplane_proto.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::bombplane_proto::Type type() const;
  void set_type(::bombplane_proto::Type value);

  // optional .bombplane_proto.LoginRequest loginrequest = 201;
  bool has_loginrequest() const;
  void clear_loginrequest();
  static const int kLoginrequestFieldNumber = 201;
  const ::bombplane_proto::LoginRequest& loginrequest() const;
  ::bombplane_proto::LoginRequest* mutable_loginrequest();
  ::bombplane_proto::LoginRequest* release_loginrequest();
  void set_allocated_loginrequest(::bombplane_proto::LoginRequest* loginrequest);

  // optional .bombplane_proto.LoginResponse loginresponse = 202;
  bool has_loginresponse() const;
  void clear_loginresponse();
  static const int kLoginresponseFieldNumber = 202;
  const ::bombplane_proto::LoginResponse& loginresponse() const;
  ::bombplane_proto::LoginResponse* mutable_loginresponse();
  ::bombplane_proto::LoginResponse* release_loginresponse();
  void set_allocated_loginresponse(::bombplane_proto::LoginResponse* loginresponse);

  // optional .bombplane_proto.OnlinelistNotification onlinelistnotification = 203;
  bool has_onlinelistnotification() const;
  void clear_onlinelistnotification();
  static const int kOnlinelistnotificationFieldNumber = 203;
  const ::bombplane_proto::OnlinelistNotification& onlinelistnotification() const;
  ::bombplane_proto::OnlinelistNotification* mutable_onlinelistnotification();
  ::bombplane_proto::OnlinelistNotification* release_onlinelistnotification();
  void set_allocated_onlinelistnotification(::bombplane_proto::OnlinelistNotification* onlinelistnotification);

  // optional .bombplane_proto.UpdateonlineBroadcast updateonlinebroadcast = 204;
  bool has_updateonlinebroadcast() const;
  void clear_updateonlinebroadcast();
  static const int kUpdateonlinebroadcastFieldNumber = 204;
  const ::bombplane_proto::UpdateonlineBroadcast& updateonlinebroadcast() const;
  ::bombplane_proto::UpdateonlineBroadcast* mutable_updateonlinebroadcast();
  ::bombplane_proto::UpdateonlineBroadcast* release_updateonlinebroadcast();
  void set_allocated_updateonlinebroadcast(::bombplane_proto::UpdateonlineBroadcast* updateonlinebroadcast);

  // optional .bombplane_proto.InviteRequest inviterequest = 301;
  bool has_inviterequest() const;
  void clear_inviterequest();
  static const int kInviterequestFieldNumber = 301;
  const ::bombplane_proto::InviteRequest& inviterequest() const;
  ::bombplane_proto::InviteRequest* mutable_inviterequest();
  ::bombplane_proto::InviteRequest* release_inviterequest();
  void set_allocated_inviterequest(::bombplane_proto::InviteRequest* inviterequest);

  // optional .bombplane_proto.InviteResponse inviteresponse = 302;
  bool has_inviteresponse() const;
  void clear_inviteresponse();
  static const int kInviteresponseFieldNumber = 302;
  const ::bombplane_proto::InviteResponse& inviteresponse() const;
  ::bombplane_proto::InviteResponse* mutable_inviteresponse();
  ::bombplane_proto::InviteResponse* release_inviteresponse();
  void set_allocated_inviteresponse(::bombplane_proto::InviteResponse* inviteresponse);

  // optional .bombplane_proto.UpdateroomBroadcast updateroombroadcast = 303;
  bool has_updateroombroadcast() const;
  void clear_updateroombroadcast();
  static const int kUpdateroombroadcastFieldNumber = 303;
  const ::bombplane_proto::UpdateroomBroadcast& updateroombroadcast() const;
  ::bombplane_proto::UpdateroomBroadcast* mutable_updateroombroadcast();
  ::bombplane_proto::UpdateroomBroadcast* release_updateroombroadcast();
  void set_allocated_updateroombroadcast(::bombplane_proto::UpdateroomBroadcast* updateroombroadcast);

  // optional .bombplane_proto.InitposNotification initposnotification = 403;
  bool has_initposnotification() const;
  void clear_initposnotification();
  static const int kInitposnotificationFieldNumber = 403;
  const ::bombplane_proto::InitposNotification& initposnotification() const;
  ::bombplane_proto::InitposNotification* mutable_initposnotification();
  ::bombplane_proto::InitposNotification* release_initposnotification();
  void set_allocated_initposnotification(::bombplane_proto::InitposNotification* initposnotification);

  // optional .bombplane_proto.GamestartNotification gamestartnotification = 404;
  bool has_gamestartnotification() const;
  void clear_gamestartnotification();
  static const int kGamestartnotificationFieldNumber = 404;
  const ::bombplane_proto::GamestartNotification& gamestartnotification() const;
  ::bombplane_proto::GamestartNotification* mutable_gamestartnotification();
  ::bombplane_proto::GamestartNotification* release_gamestartnotification();
  void set_allocated_gamestartnotification(::bombplane_proto::GamestartNotification* gamestartnotification);

  // optional .bombplane_proto.BombRequest bombrequest = 405;
  bool has_bombrequest() const;
  void clear_bombrequest();
  static const int kBombrequestFieldNumber = 405;
  const ::bombplane_proto::BombRequest& bombrequest() const;
  ::bombplane_proto::BombRequest* mutable_bombrequest();
  ::bombplane_proto::BombRequest* release_bombrequest();
  void set_allocated_bombrequest(::bombplane_proto::BombRequest* bombrequest);

  // optional .bombplane_proto.BombResponse bombresponse = 406;
  bool has_bombresponse() const;
  void clear_bombresponse();
  static const int kBombresponseFieldNumber = 406;
  const ::bombplane_proto::BombResponse& bombresponse() const;
  ::bombplane_proto::BombResponse* mutable_bombresponse();
  ::bombplane_proto::BombResponse* release_bombresponse();
  void set_allocated_bombresponse(::bombplane_proto::BombResponse* bombresponse);

  // optional .bombplane_proto.GuessRequest guessrequest = 407;
  bool has_guessrequest() const;
  void clear_guessrequest();
  static const int kGuessrequestFieldNumber = 407;
  const ::bombplane_proto::GuessRequest& guessrequest() const;
  ::bombplane_proto::GuessRequest* mutable_guessrequest();
  ::bombplane_proto::GuessRequest* release_guessrequest();
  void set_allocated_guessrequest(::bombplane_proto::GuessRequest* guessrequest);

  // optional .bombplane_proto.GuessResponse guessresponse = 408;
  bool has_guessresponse() const;
  void clear_guessresponse();
  static const int kGuessresponseFieldNumber = 408;
  const ::bombplane_proto::GuessResponse& guessresponse() const;
  ::bombplane_proto::GuessResponse* mutable_guessresponse();
  ::bombplane_proto::GuessResponse* release_guessresponse();
  void set_allocated_guessresponse(::bombplane_proto::GuessResponse* guessresponse);

  // optional .bombplane_proto.GameoverNotification gameovernotification = 409;
  bool has_gameovernotification() const;
  void clear_gameovernotification();
  static const int kGameovernotificationFieldNumber = 409;
  const ::bombplane_proto::GameoverNotification& gameovernotification() const;
  ::bombplane_proto::GameoverNotification* mutable_gameovernotification();
  ::bombplane_proto::GameoverNotification* release_gameovernotification();
  void set_allocated_gameovernotification(::bombplane_proto::GameoverNotification* gameovernotification);

  // optional .bombplane_proto.GamecrushNotification gamecrushnotification = 410;
  bool has_gamecrushnotification() const;
  void clear_gamecrushnotification();
  static const int kGamecrushnotificationFieldNumber = 410;
  const ::bombplane_proto::GamecrushNotification& gamecrushnotification() const;
  ::bombplane_proto::GamecrushNotification* mutable_gamecrushnotification();
  ::bombplane_proto::GamecrushNotification* release_gamecrushnotification();
  void set_allocated_gamecrushnotification(::bombplane_proto::GamecrushNotification* gamecrushnotification);

  BodyCase body_case() const;
  // @@protoc_insertion_point(class_scope:bombplane_proto.Message)
 private:
  inline void set_has_loginrequest();
  inline void set_has_loginresponse();
  inline void set_has_onlinelistnotification();
  inline void set_has_updateonlinebroadcast();
  inline void set_has_inviterequest();
  inline void set_has_inviteresponse();
  inline void set_has_updateroombroadcast();
  inline void set_has_initposnotification();
  inline void set_has_gamestartnotification();
  inline void set_has_bombrequest();
  inline void set_has_bombresponse();
  inline void set_has_guessrequest();
  inline void set_has_guessresponse();
  inline void set_has_gameovernotification();
  inline void set_has_gamecrushnotification();

  inline bool has_body() const;
  void clear_body();
  inline void clear_has_body();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int type_;
  union BodyUnion {
    BodyUnion() {}
    ::bombplane_proto::LoginRequest* loginrequest_;
    ::bombplane_proto::LoginResponse* loginresponse_;
    ::bombplane_proto::OnlinelistNotification* onlinelistnotification_;
    ::bombplane_proto::UpdateonlineBroadcast* updateonlinebroadcast_;
    ::bombplane_proto::InviteRequest* inviterequest_;
    ::bombplane_proto::InviteResponse* inviteresponse_;
    ::bombplane_proto::UpdateroomBroadcast* updateroombroadcast_;
    ::bombplane_proto::InitposNotification* initposnotification_;
    ::bombplane_proto::GamestartNotification* gamestartnotification_;
    ::bombplane_proto::BombRequest* bombrequest_;
    ::bombplane_proto::BombResponse* bombresponse_;
    ::bombplane_proto::GuessRequest* guessrequest_;
    ::bombplane_proto::GuessResponse* guessresponse_;
    ::bombplane_proto::GameoverNotification* gameovernotification_;
    ::bombplane_proto::GamecrushNotification* gamecrushnotification_;
  } body_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const LoginRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional bytes password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const void* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:bombplane_proto.LoginRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static LoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const LoginResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginResponse* other);

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const { return New(NULL); }

  LoginResponse* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef LoginResponse_LoginState LoginState;
  static const LoginState SUCCESS =
    LoginResponse_LoginState_SUCCESS;
  static const LoginState SUCCESS_KICK =
    LoginResponse_LoginState_SUCCESS_KICK;
  static const LoginState NOT_EXIST =
    LoginResponse_LoginState_NOT_EXIST;
  static const LoginState WRONG_PASSWORD =
    LoginResponse_LoginState_WRONG_PASSWORD;
  static const LoginState SERVER_ERROR =
    LoginResponse_LoginState_SERVER_ERROR;
  static inline bool LoginState_IsValid(int value) {
    return LoginResponse_LoginState_IsValid(value);
  }
  static const LoginState LoginState_MIN =
    LoginResponse_LoginState_LoginState_MIN;
  static const LoginState LoginState_MAX =
    LoginResponse_LoginState_LoginState_MAX;
  static const int LoginState_ARRAYSIZE =
    LoginResponse_LoginState_LoginState_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .bombplane_proto.LoginResponse.LoginState state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::bombplane_proto::LoginResponse_LoginState state() const;
  void set_state(::bombplane_proto::LoginResponse_LoginState value);

  // optional int32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.LoginResponse)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int state_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static LoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class OnlineUser : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.OnlineUser) */ {
 public:
  OnlineUser();
  virtual ~OnlineUser();

  OnlineUser(const OnlineUser& from);

  inline OnlineUser& operator=(const OnlineUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const OnlineUser& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OnlineUser* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OnlineUser* other);

  // implements Message ----------------------------------------------

  inline OnlineUser* New() const { return New(NULL); }

  OnlineUser* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OnlineUser& from);
  void MergeFrom(const OnlineUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OnlineUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional int32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional bool inroom = 3;
  void clear_inroom();
  static const int kInroomFieldNumber = 3;
  bool inroom() const;
  void set_inroom(bool value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.OnlineUser)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 userid_;
  bool inroom_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static OnlineUser* default_instance_;
};
// -------------------------------------------------------------------

class OnlinelistNotification : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.OnlinelistNotification) */ {
 public:
  OnlinelistNotification();
  virtual ~OnlinelistNotification();

  OnlinelistNotification(const OnlinelistNotification& from);

  inline OnlinelistNotification& operator=(const OnlinelistNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const OnlinelistNotification& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OnlinelistNotification* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OnlinelistNotification* other);

  // implements Message ----------------------------------------------

  inline OnlinelistNotification* New() const { return New(NULL); }

  OnlinelistNotification* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OnlinelistNotification& from);
  void MergeFrom(const OnlinelistNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OnlinelistNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bombplane_proto.OnlineUser onlinelist = 1;
  int onlinelist_size() const;
  void clear_onlinelist();
  static const int kOnlinelistFieldNumber = 1;
  const ::bombplane_proto::OnlineUser& onlinelist(int index) const;
  ::bombplane_proto::OnlineUser* mutable_onlinelist(int index);
  ::bombplane_proto::OnlineUser* add_onlinelist();
  ::google::protobuf::RepeatedPtrField< ::bombplane_proto::OnlineUser >*
      mutable_onlinelist();
  const ::google::protobuf::RepeatedPtrField< ::bombplane_proto::OnlineUser >&
      onlinelist() const;

  // @@protoc_insertion_point(class_scope:bombplane_proto.OnlinelistNotification)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::bombplane_proto::OnlineUser > onlinelist_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static OnlinelistNotification* default_instance_;
};
// -------------------------------------------------------------------

class UpdateonlineBroadcast : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.UpdateonlineBroadcast) */ {
 public:
  UpdateonlineBroadcast();
  virtual ~UpdateonlineBroadcast();

  UpdateonlineBroadcast(const UpdateonlineBroadcast& from);

  inline UpdateonlineBroadcast& operator=(const UpdateonlineBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  static const UpdateonlineBroadcast& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UpdateonlineBroadcast* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UpdateonlineBroadcast* other);

  // implements Message ----------------------------------------------

  inline UpdateonlineBroadcast* New() const { return New(NULL); }

  UpdateonlineBroadcast* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UpdateonlineBroadcast& from);
  void MergeFrom(const UpdateonlineBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateonlineBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional int32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional bool online = 3;
  void clear_online();
  static const int kOnlineFieldNumber = 3;
  bool online() const;
  void set_online(bool value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.UpdateonlineBroadcast)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 userid_;
  bool online_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static UpdateonlineBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class InviteRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.InviteRequest) */ {
 public:
  InviteRequest();
  virtual ~InviteRequest();

  InviteRequest(const InviteRequest& from);

  inline InviteRequest& operator=(const InviteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const InviteRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InviteRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InviteRequest* other);

  // implements Message ----------------------------------------------

  inline InviteRequest* New() const { return New(NULL); }

  InviteRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InviteRequest& from);
  void MergeFrom(const InviteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InviteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 srcuserid = 1;
  void clear_srcuserid();
  static const int kSrcuseridFieldNumber = 1;
  ::google::protobuf::int32 srcuserid() const;
  void set_srcuserid(::google::protobuf::int32 value);

  // optional int32 dstuserid = 2;
  void clear_dstuserid();
  static const int kDstuseridFieldNumber = 2;
  ::google::protobuf::int32 dstuserid() const;
  void set_dstuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.InviteRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int32 srcuserid_;
  ::google::protobuf::int32 dstuserid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static InviteRequest* default_instance_;
};
// -------------------------------------------------------------------

class InviteResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.InviteResponse) */ {
 public:
  InviteResponse();
  virtual ~InviteResponse();

  InviteResponse(const InviteResponse& from);

  inline InviteResponse& operator=(const InviteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const InviteResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InviteResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InviteResponse* other);

  // implements Message ----------------------------------------------

  inline InviteResponse* New() const { return New(NULL); }

  InviteResponse* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InviteResponse& from);
  void MergeFrom(const InviteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InviteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 srcuserid = 1;
  void clear_srcuserid();
  static const int kSrcuseridFieldNumber = 1;
  ::google::protobuf::int32 srcuserid() const;
  void set_srcuserid(::google::protobuf::int32 value);

  // optional bool accept = 2;
  void clear_accept();
  static const int kAcceptFieldNumber = 2;
  bool accept() const;
  void set_accept(bool value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.InviteResponse)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int32 srcuserid_;
  bool accept_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static InviteResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateroomBroadcast : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.UpdateroomBroadcast) */ {
 public:
  UpdateroomBroadcast();
  virtual ~UpdateroomBroadcast();

  UpdateroomBroadcast(const UpdateroomBroadcast& from);

  inline UpdateroomBroadcast& operator=(const UpdateroomBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  static const UpdateroomBroadcast& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UpdateroomBroadcast* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UpdateroomBroadcast* other);

  // implements Message ----------------------------------------------

  inline UpdateroomBroadcast* New() const { return New(NULL); }

  UpdateroomBroadcast* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UpdateroomBroadcast& from);
  void MergeFrom(const UpdateroomBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateroomBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid1 = 1;
  void clear_userid1();
  static const int kUserid1FieldNumber = 1;
  ::google::protobuf::int32 userid1() const;
  void set_userid1(::google::protobuf::int32 value);

  // optional int32 userid2 = 2;
  void clear_userid2();
  static const int kUserid2FieldNumber = 2;
  ::google::protobuf::int32 userid2() const;
  void set_userid2(::google::protobuf::int32 value);

  // optional bool inout = 3;
  void clear_inout();
  static const int kInoutFieldNumber = 3;
  bool inout() const;
  void set_inout(bool value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.UpdateroomBroadcast)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int32 userid1_;
  ::google::protobuf::int32 userid2_;
  bool inout_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static UpdateroomBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class Coordinate : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.Coordinate) */ {
 public:
  Coordinate();
  virtual ~Coordinate();

  Coordinate(const Coordinate& from);

  inline Coordinate& operator=(const Coordinate& from) {
    CopyFrom(from);
    return *this;
  }

  static const Coordinate& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Coordinate* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Coordinate* other);

  // implements Message ----------------------------------------------

  inline Coordinate* New() const { return New(NULL); }

  Coordinate* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Coordinate& from);
  void MergeFrom(const Coordinate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Coordinate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.Coordinate)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static Coordinate* default_instance_;
};
// -------------------------------------------------------------------

class PlaneLocator : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.PlaneLocator) */ {
 public:
  PlaneLocator();
  virtual ~PlaneLocator();

  PlaneLocator(const PlaneLocator& from);

  inline PlaneLocator& operator=(const PlaneLocator& from) {
    CopyFrom(from);
    return *this;
  }

  static const PlaneLocator& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PlaneLocator* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PlaneLocator* other);

  // implements Message ----------------------------------------------

  inline PlaneLocator* New() const { return New(NULL); }

  PlaneLocator* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PlaneLocator& from);
  void MergeFrom(const PlaneLocator& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlaneLocator* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bombplane_proto.Coordinate pos1 = 1;
  bool has_pos1() const;
  void clear_pos1();
  static const int kPos1FieldNumber = 1;
  const ::bombplane_proto::Coordinate& pos1() const;
  ::bombplane_proto::Coordinate* mutable_pos1();
  ::bombplane_proto::Coordinate* release_pos1();
  void set_allocated_pos1(::bombplane_proto::Coordinate* pos1);

  // optional .bombplane_proto.Coordinate pos2 = 2;
  bool has_pos2() const;
  void clear_pos2();
  static const int kPos2FieldNumber = 2;
  const ::bombplane_proto::Coordinate& pos2() const;
  ::bombplane_proto::Coordinate* mutable_pos2();
  ::bombplane_proto::Coordinate* release_pos2();
  void set_allocated_pos2(::bombplane_proto::Coordinate* pos2);

  // optional .bombplane_proto.Coordinate pos3 = 3;
  bool has_pos3() const;
  void clear_pos3();
  static const int kPos3FieldNumber = 3;
  const ::bombplane_proto::Coordinate& pos3() const;
  ::bombplane_proto::Coordinate* mutable_pos3();
  ::bombplane_proto::Coordinate* release_pos3();
  void set_allocated_pos3(::bombplane_proto::Coordinate* pos3);

  // @@protoc_insertion_point(class_scope:bombplane_proto.PlaneLocator)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::bombplane_proto::Coordinate* pos1_;
  ::bombplane_proto::Coordinate* pos2_;
  ::bombplane_proto::Coordinate* pos3_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static PlaneLocator* default_instance_;
};
// -------------------------------------------------------------------

class InitposNotification : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.InitposNotification) */ {
 public:
  InitposNotification();
  virtual ~InitposNotification();

  InitposNotification(const InitposNotification& from);

  inline InitposNotification& operator=(const InitposNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const InitposNotification& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InitposNotification* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InitposNotification* other);

  // implements Message ----------------------------------------------

  inline InitposNotification* New() const { return New(NULL); }

  InitposNotification* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InitposNotification& from);
  void MergeFrom(const InitposNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InitposNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bombplane_proto.PlaneLocator loc1 = 1;
  bool has_loc1() const;
  void clear_loc1();
  static const int kLoc1FieldNumber = 1;
  const ::bombplane_proto::PlaneLocator& loc1() const;
  ::bombplane_proto::PlaneLocator* mutable_loc1();
  ::bombplane_proto::PlaneLocator* release_loc1();
  void set_allocated_loc1(::bombplane_proto::PlaneLocator* loc1);

  // optional .bombplane_proto.PlaneLocator loc2 = 2;
  bool has_loc2() const;
  void clear_loc2();
  static const int kLoc2FieldNumber = 2;
  const ::bombplane_proto::PlaneLocator& loc2() const;
  ::bombplane_proto::PlaneLocator* mutable_loc2();
  ::bombplane_proto::PlaneLocator* release_loc2();
  void set_allocated_loc2(::bombplane_proto::PlaneLocator* loc2);

  // optional .bombplane_proto.PlaneLocator loc3 = 3;
  bool has_loc3() const;
  void clear_loc3();
  static const int kLoc3FieldNumber = 3;
  const ::bombplane_proto::PlaneLocator& loc3() const;
  ::bombplane_proto::PlaneLocator* mutable_loc3();
  ::bombplane_proto::PlaneLocator* release_loc3();
  void set_allocated_loc3(::bombplane_proto::PlaneLocator* loc3);

  // @@protoc_insertion_point(class_scope:bombplane_proto.InitposNotification)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::bombplane_proto::PlaneLocator* loc1_;
  ::bombplane_proto::PlaneLocator* loc2_;
  ::bombplane_proto::PlaneLocator* loc3_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static InitposNotification* default_instance_;
};
// -------------------------------------------------------------------

class GamestartNotification : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.GamestartNotification) */ {
 public:
  GamestartNotification();
  virtual ~GamestartNotification();

  GamestartNotification(const GamestartNotification& from);

  inline GamestartNotification& operator=(const GamestartNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const GamestartNotification& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GamestartNotification* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GamestartNotification* other);

  // implements Message ----------------------------------------------

  inline GamestartNotification* New() const { return New(NULL); }

  GamestartNotification* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GamestartNotification& from);
  void MergeFrom(const GamestartNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GamestartNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.GamestartNotification)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static GamestartNotification* default_instance_;
};
// -------------------------------------------------------------------

class BombRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.BombRequest) */ {
 public:
  BombRequest();
  virtual ~BombRequest();

  BombRequest(const BombRequest& from);

  inline BombRequest& operator=(const BombRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const BombRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BombRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BombRequest* other);

  // implements Message ----------------------------------------------

  inline BombRequest* New() const { return New(NULL); }

  BombRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BombRequest& from);
  void MergeFrom(const BombRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BombRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bombplane_proto.Coordinate pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::bombplane_proto::Coordinate& pos() const;
  ::bombplane_proto::Coordinate* mutable_pos();
  ::bombplane_proto::Coordinate* release_pos();
  void set_allocated_pos(::bombplane_proto::Coordinate* pos);

  // @@protoc_insertion_point(class_scope:bombplane_proto.BombRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::bombplane_proto::Coordinate* pos_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static BombRequest* default_instance_;
};
// -------------------------------------------------------------------

class BombResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.BombResponse) */ {
 public:
  BombResponse();
  virtual ~BombResponse();

  BombResponse(const BombResponse& from);

  inline BombResponse& operator=(const BombResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const BombResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BombResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BombResponse* other);

  // implements Message ----------------------------------------------

  inline BombResponse* New() const { return New(NULL); }

  BombResponse* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BombResponse& from);
  void MergeFrom(const BombResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BombResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef BombResponse_BOMB_RESULT BOMB_RESULT;
  static const BOMB_RESULT MISS =
    BombResponse_BOMB_RESULT_MISS;
  static const BOMB_RESULT HIT =
    BombResponse_BOMB_RESULT_HIT;
  static const BOMB_RESULT DESTORYED =
    BombResponse_BOMB_RESULT_DESTORYED;
  static inline bool BOMB_RESULT_IsValid(int value) {
    return BombResponse_BOMB_RESULT_IsValid(value);
  }
  static const BOMB_RESULT BOMB_RESULT_MIN =
    BombResponse_BOMB_RESULT_BOMB_RESULT_MIN;
  static const BOMB_RESULT BOMB_RESULT_MAX =
    BombResponse_BOMB_RESULT_BOMB_RESULT_MAX;
  static const int BOMB_RESULT_ARRAYSIZE =
    BombResponse_BOMB_RESULT_BOMB_RESULT_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .bombplane_proto.BombResponse.BOMB_RESULT res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::bombplane_proto::BombResponse_BOMB_RESULT res() const;
  void set_res(::bombplane_proto::BombResponse_BOMB_RESULT value);

  // optional .bombplane_proto.Coordinate pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::bombplane_proto::Coordinate& pos() const;
  ::bombplane_proto::Coordinate* mutable_pos();
  ::bombplane_proto::Coordinate* release_pos();
  void set_allocated_pos(::bombplane_proto::Coordinate* pos);

  // @@protoc_insertion_point(class_scope:bombplane_proto.BombResponse)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::bombplane_proto::Coordinate* pos_;
  int res_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static BombResponse* default_instance_;
};
// -------------------------------------------------------------------

class GuessRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.GuessRequest) */ {
 public:
  GuessRequest();
  virtual ~GuessRequest();

  GuessRequest(const GuessRequest& from);

  inline GuessRequest& operator=(const GuessRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const GuessRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GuessRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GuessRequest* other);

  // implements Message ----------------------------------------------

  inline GuessRequest* New() const { return New(NULL); }

  GuessRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GuessRequest& from);
  void MergeFrom(const GuessRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GuessRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .bombplane_proto.PlaneLocator loc = 1;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 1;
  const ::bombplane_proto::PlaneLocator& loc() const;
  ::bombplane_proto::PlaneLocator* mutable_loc();
  ::bombplane_proto::PlaneLocator* release_loc();
  void set_allocated_loc(::bombplane_proto::PlaneLocator* loc);

  // @@protoc_insertion_point(class_scope:bombplane_proto.GuessRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::bombplane_proto::PlaneLocator* loc_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static GuessRequest* default_instance_;
};
// -------------------------------------------------------------------

class GuessResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.GuessResponse) */ {
 public:
  GuessResponse();
  virtual ~GuessResponse();

  GuessResponse(const GuessResponse& from);

  inline GuessResponse& operator=(const GuessResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const GuessResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GuessResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GuessResponse* other);

  // implements Message ----------------------------------------------

  inline GuessResponse* New() const { return New(NULL); }

  GuessResponse* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GuessResponse& from);
  void MergeFrom(const GuessResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GuessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool destroyed = 1;
  void clear_destroyed();
  static const int kDestroyedFieldNumber = 1;
  bool destroyed() const;
  void set_destroyed(bool value);

  // optional .bombplane_proto.PlaneLocator loc = 2;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 2;
  const ::bombplane_proto::PlaneLocator& loc() const;
  ::bombplane_proto::PlaneLocator* mutable_loc();
  ::bombplane_proto::PlaneLocator* release_loc();
  void set_allocated_loc(::bombplane_proto::PlaneLocator* loc);

  // @@protoc_insertion_point(class_scope:bombplane_proto.GuessResponse)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::bombplane_proto::PlaneLocator* loc_;
  bool destroyed_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static GuessResponse* default_instance_;
};
// -------------------------------------------------------------------

class GameoverNotification : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.GameoverNotification) */ {
 public:
  GameoverNotification();
  virtual ~GameoverNotification();

  GameoverNotification(const GameoverNotification& from);

  inline GameoverNotification& operator=(const GameoverNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const GameoverNotification& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GameoverNotification* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GameoverNotification* other);

  // implements Message ----------------------------------------------

  inline GameoverNotification* New() const { return New(NULL); }

  GameoverNotification* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GameoverNotification& from);
  void MergeFrom(const GameoverNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameoverNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 winnerid = 1;
  void clear_winnerid();
  static const int kWinneridFieldNumber = 1;
  ::google::protobuf::int32 winnerid() const;
  void set_winnerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.GameoverNotification)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int32 winnerid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static GameoverNotification* default_instance_;
};
// -------------------------------------------------------------------

class GamecrushNotification : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:bombplane_proto.GamecrushNotification) */ {
 public:
  GamecrushNotification();
  virtual ~GamecrushNotification();

  GamecrushNotification(const GamecrushNotification& from);

  inline GamecrushNotification& operator=(const GamecrushNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const GamecrushNotification& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GamecrushNotification* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GamecrushNotification* other);

  // implements Message ----------------------------------------------

  inline GamecrushNotification* New() const { return New(NULL); }

  GamecrushNotification* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GamecrushNotification& from);
  void MergeFrom(const GamecrushNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GamecrushNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef GamecrushNotification_CrushReason CrushReason;
  static const CrushReason OPPONENT_OFF =
    GamecrushNotification_CrushReason_OPPONENT_OFF;
  static const CrushReason SERVER_ERROR =
    GamecrushNotification_CrushReason_SERVER_ERROR;
  static inline bool CrushReason_IsValid(int value) {
    return GamecrushNotification_CrushReason_IsValid(value);
  }
  static const CrushReason CrushReason_MIN =
    GamecrushNotification_CrushReason_CrushReason_MIN;
  static const CrushReason CrushReason_MAX =
    GamecrushNotification_CrushReason_CrushReason_MAX;
  static const int CrushReason_ARRAYSIZE =
    GamecrushNotification_CrushReason_CrushReason_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional .bombplane_proto.GamecrushNotification.CrushReason reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::bombplane_proto::GamecrushNotification_CrushReason reason() const;
  void set_reason(::bombplane_proto::GamecrushNotification_CrushReason value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.GamecrushNotification)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  int reason_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BombPlane_5fproto_2eproto();
  #endif
  friend void protobuf_AssignDesc_BombPlane_5fproto_2eproto();
  friend void protobuf_ShutdownFile_BombPlane_5fproto_2eproto();

  void InitAsDefaultInstance();
  static GamecrushNotification* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// optional .bombplane_proto.Type type = 1;
inline void Message::clear_type() {
  type_ = 0;
}
inline ::bombplane_proto::Type Message::type() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.type)
  return static_cast< ::bombplane_proto::Type >(type_);
}
inline void Message::set_type(::bombplane_proto::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.Message.type)
}

// optional .bombplane_proto.LoginRequest loginrequest = 201;
inline bool Message::has_loginrequest() const {
  return body_case() == kLoginrequest;
}
inline void Message::set_has_loginrequest() {
  _oneof_case_[0] = kLoginrequest;
}
inline void Message::clear_loginrequest() {
  if (has_loginrequest()) {
    delete body_.loginrequest_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::LoginRequest& Message::loginrequest() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.loginrequest)
  return has_loginrequest()
      ? *body_.loginrequest_
      : ::bombplane_proto::LoginRequest::default_instance();
}
inline ::bombplane_proto::LoginRequest* Message::mutable_loginrequest() {
  if (!has_loginrequest()) {
    clear_body();
    set_has_loginrequest();
    body_.loginrequest_ = new ::bombplane_proto::LoginRequest;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.loginrequest)
  return body_.loginrequest_;
}
inline ::bombplane_proto::LoginRequest* Message::release_loginrequest() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.loginrequest)
  if (has_loginrequest()) {
    clear_has_body();
    ::bombplane_proto::LoginRequest* temp = body_.loginrequest_;
    body_.loginrequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_loginrequest(::bombplane_proto::LoginRequest* loginrequest) {
  clear_body();
  if (loginrequest) {
    set_has_loginrequest();
    body_.loginrequest_ = loginrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.loginrequest)
}

// optional .bombplane_proto.LoginResponse loginresponse = 202;
inline bool Message::has_loginresponse() const {
  return body_case() == kLoginresponse;
}
inline void Message::set_has_loginresponse() {
  _oneof_case_[0] = kLoginresponse;
}
inline void Message::clear_loginresponse() {
  if (has_loginresponse()) {
    delete body_.loginresponse_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::LoginResponse& Message::loginresponse() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.loginresponse)
  return has_loginresponse()
      ? *body_.loginresponse_
      : ::bombplane_proto::LoginResponse::default_instance();
}
inline ::bombplane_proto::LoginResponse* Message::mutable_loginresponse() {
  if (!has_loginresponse()) {
    clear_body();
    set_has_loginresponse();
    body_.loginresponse_ = new ::bombplane_proto::LoginResponse;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.loginresponse)
  return body_.loginresponse_;
}
inline ::bombplane_proto::LoginResponse* Message::release_loginresponse() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.loginresponse)
  if (has_loginresponse()) {
    clear_has_body();
    ::bombplane_proto::LoginResponse* temp = body_.loginresponse_;
    body_.loginresponse_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_loginresponse(::bombplane_proto::LoginResponse* loginresponse) {
  clear_body();
  if (loginresponse) {
    set_has_loginresponse();
    body_.loginresponse_ = loginresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.loginresponse)
}

// optional .bombplane_proto.OnlinelistNotification onlinelistnotification = 203;
inline bool Message::has_onlinelistnotification() const {
  return body_case() == kOnlinelistnotification;
}
inline void Message::set_has_onlinelistnotification() {
  _oneof_case_[0] = kOnlinelistnotification;
}
inline void Message::clear_onlinelistnotification() {
  if (has_onlinelistnotification()) {
    delete body_.onlinelistnotification_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::OnlinelistNotification& Message::onlinelistnotification() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.onlinelistnotification)
  return has_onlinelistnotification()
      ? *body_.onlinelistnotification_
      : ::bombplane_proto::OnlinelistNotification::default_instance();
}
inline ::bombplane_proto::OnlinelistNotification* Message::mutable_onlinelistnotification() {
  if (!has_onlinelistnotification()) {
    clear_body();
    set_has_onlinelistnotification();
    body_.onlinelistnotification_ = new ::bombplane_proto::OnlinelistNotification;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.onlinelistnotification)
  return body_.onlinelistnotification_;
}
inline ::bombplane_proto::OnlinelistNotification* Message::release_onlinelistnotification() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.onlinelistnotification)
  if (has_onlinelistnotification()) {
    clear_has_body();
    ::bombplane_proto::OnlinelistNotification* temp = body_.onlinelistnotification_;
    body_.onlinelistnotification_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_onlinelistnotification(::bombplane_proto::OnlinelistNotification* onlinelistnotification) {
  clear_body();
  if (onlinelistnotification) {
    set_has_onlinelistnotification();
    body_.onlinelistnotification_ = onlinelistnotification;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.onlinelistnotification)
}

// optional .bombplane_proto.UpdateonlineBroadcast updateonlinebroadcast = 204;
inline bool Message::has_updateonlinebroadcast() const {
  return body_case() == kUpdateonlinebroadcast;
}
inline void Message::set_has_updateonlinebroadcast() {
  _oneof_case_[0] = kUpdateonlinebroadcast;
}
inline void Message::clear_updateonlinebroadcast() {
  if (has_updateonlinebroadcast()) {
    delete body_.updateonlinebroadcast_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::UpdateonlineBroadcast& Message::updateonlinebroadcast() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.updateonlinebroadcast)
  return has_updateonlinebroadcast()
      ? *body_.updateonlinebroadcast_
      : ::bombplane_proto::UpdateonlineBroadcast::default_instance();
}
inline ::bombplane_proto::UpdateonlineBroadcast* Message::mutable_updateonlinebroadcast() {
  if (!has_updateonlinebroadcast()) {
    clear_body();
    set_has_updateonlinebroadcast();
    body_.updateonlinebroadcast_ = new ::bombplane_proto::UpdateonlineBroadcast;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.updateonlinebroadcast)
  return body_.updateonlinebroadcast_;
}
inline ::bombplane_proto::UpdateonlineBroadcast* Message::release_updateonlinebroadcast() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.updateonlinebroadcast)
  if (has_updateonlinebroadcast()) {
    clear_has_body();
    ::bombplane_proto::UpdateonlineBroadcast* temp = body_.updateonlinebroadcast_;
    body_.updateonlinebroadcast_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_updateonlinebroadcast(::bombplane_proto::UpdateonlineBroadcast* updateonlinebroadcast) {
  clear_body();
  if (updateonlinebroadcast) {
    set_has_updateonlinebroadcast();
    body_.updateonlinebroadcast_ = updateonlinebroadcast;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.updateonlinebroadcast)
}

// optional .bombplane_proto.InviteRequest inviterequest = 301;
inline bool Message::has_inviterequest() const {
  return body_case() == kInviterequest;
}
inline void Message::set_has_inviterequest() {
  _oneof_case_[0] = kInviterequest;
}
inline void Message::clear_inviterequest() {
  if (has_inviterequest()) {
    delete body_.inviterequest_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::InviteRequest& Message::inviterequest() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.inviterequest)
  return has_inviterequest()
      ? *body_.inviterequest_
      : ::bombplane_proto::InviteRequest::default_instance();
}
inline ::bombplane_proto::InviteRequest* Message::mutable_inviterequest() {
  if (!has_inviterequest()) {
    clear_body();
    set_has_inviterequest();
    body_.inviterequest_ = new ::bombplane_proto::InviteRequest;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.inviterequest)
  return body_.inviterequest_;
}
inline ::bombplane_proto::InviteRequest* Message::release_inviterequest() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.inviterequest)
  if (has_inviterequest()) {
    clear_has_body();
    ::bombplane_proto::InviteRequest* temp = body_.inviterequest_;
    body_.inviterequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_inviterequest(::bombplane_proto::InviteRequest* inviterequest) {
  clear_body();
  if (inviterequest) {
    set_has_inviterequest();
    body_.inviterequest_ = inviterequest;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.inviterequest)
}

// optional .bombplane_proto.InviteResponse inviteresponse = 302;
inline bool Message::has_inviteresponse() const {
  return body_case() == kInviteresponse;
}
inline void Message::set_has_inviteresponse() {
  _oneof_case_[0] = kInviteresponse;
}
inline void Message::clear_inviteresponse() {
  if (has_inviteresponse()) {
    delete body_.inviteresponse_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::InviteResponse& Message::inviteresponse() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.inviteresponse)
  return has_inviteresponse()
      ? *body_.inviteresponse_
      : ::bombplane_proto::InviteResponse::default_instance();
}
inline ::bombplane_proto::InviteResponse* Message::mutable_inviteresponse() {
  if (!has_inviteresponse()) {
    clear_body();
    set_has_inviteresponse();
    body_.inviteresponse_ = new ::bombplane_proto::InviteResponse;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.inviteresponse)
  return body_.inviteresponse_;
}
inline ::bombplane_proto::InviteResponse* Message::release_inviteresponse() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.inviteresponse)
  if (has_inviteresponse()) {
    clear_has_body();
    ::bombplane_proto::InviteResponse* temp = body_.inviteresponse_;
    body_.inviteresponse_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_inviteresponse(::bombplane_proto::InviteResponse* inviteresponse) {
  clear_body();
  if (inviteresponse) {
    set_has_inviteresponse();
    body_.inviteresponse_ = inviteresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.inviteresponse)
}

// optional .bombplane_proto.UpdateroomBroadcast updateroombroadcast = 303;
inline bool Message::has_updateroombroadcast() const {
  return body_case() == kUpdateroombroadcast;
}
inline void Message::set_has_updateroombroadcast() {
  _oneof_case_[0] = kUpdateroombroadcast;
}
inline void Message::clear_updateroombroadcast() {
  if (has_updateroombroadcast()) {
    delete body_.updateroombroadcast_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::UpdateroomBroadcast& Message::updateroombroadcast() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.updateroombroadcast)
  return has_updateroombroadcast()
      ? *body_.updateroombroadcast_
      : ::bombplane_proto::UpdateroomBroadcast::default_instance();
}
inline ::bombplane_proto::UpdateroomBroadcast* Message::mutable_updateroombroadcast() {
  if (!has_updateroombroadcast()) {
    clear_body();
    set_has_updateroombroadcast();
    body_.updateroombroadcast_ = new ::bombplane_proto::UpdateroomBroadcast;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.updateroombroadcast)
  return body_.updateroombroadcast_;
}
inline ::bombplane_proto::UpdateroomBroadcast* Message::release_updateroombroadcast() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.updateroombroadcast)
  if (has_updateroombroadcast()) {
    clear_has_body();
    ::bombplane_proto::UpdateroomBroadcast* temp = body_.updateroombroadcast_;
    body_.updateroombroadcast_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_updateroombroadcast(::bombplane_proto::UpdateroomBroadcast* updateroombroadcast) {
  clear_body();
  if (updateroombroadcast) {
    set_has_updateroombroadcast();
    body_.updateroombroadcast_ = updateroombroadcast;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.updateroombroadcast)
}

// optional .bombplane_proto.InitposNotification initposnotification = 403;
inline bool Message::has_initposnotification() const {
  return body_case() == kInitposnotification;
}
inline void Message::set_has_initposnotification() {
  _oneof_case_[0] = kInitposnotification;
}
inline void Message::clear_initposnotification() {
  if (has_initposnotification()) {
    delete body_.initposnotification_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::InitposNotification& Message::initposnotification() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.initposnotification)
  return has_initposnotification()
      ? *body_.initposnotification_
      : ::bombplane_proto::InitposNotification::default_instance();
}
inline ::bombplane_proto::InitposNotification* Message::mutable_initposnotification() {
  if (!has_initposnotification()) {
    clear_body();
    set_has_initposnotification();
    body_.initposnotification_ = new ::bombplane_proto::InitposNotification;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.initposnotification)
  return body_.initposnotification_;
}
inline ::bombplane_proto::InitposNotification* Message::release_initposnotification() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.initposnotification)
  if (has_initposnotification()) {
    clear_has_body();
    ::bombplane_proto::InitposNotification* temp = body_.initposnotification_;
    body_.initposnotification_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_initposnotification(::bombplane_proto::InitposNotification* initposnotification) {
  clear_body();
  if (initposnotification) {
    set_has_initposnotification();
    body_.initposnotification_ = initposnotification;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.initposnotification)
}

// optional .bombplane_proto.GamestartNotification gamestartnotification = 404;
inline bool Message::has_gamestartnotification() const {
  return body_case() == kGamestartnotification;
}
inline void Message::set_has_gamestartnotification() {
  _oneof_case_[0] = kGamestartnotification;
}
inline void Message::clear_gamestartnotification() {
  if (has_gamestartnotification()) {
    delete body_.gamestartnotification_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::GamestartNotification& Message::gamestartnotification() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.gamestartnotification)
  return has_gamestartnotification()
      ? *body_.gamestartnotification_
      : ::bombplane_proto::GamestartNotification::default_instance();
}
inline ::bombplane_proto::GamestartNotification* Message::mutable_gamestartnotification() {
  if (!has_gamestartnotification()) {
    clear_body();
    set_has_gamestartnotification();
    body_.gamestartnotification_ = new ::bombplane_proto::GamestartNotification;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.gamestartnotification)
  return body_.gamestartnotification_;
}
inline ::bombplane_proto::GamestartNotification* Message::release_gamestartnotification() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.gamestartnotification)
  if (has_gamestartnotification()) {
    clear_has_body();
    ::bombplane_proto::GamestartNotification* temp = body_.gamestartnotification_;
    body_.gamestartnotification_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_gamestartnotification(::bombplane_proto::GamestartNotification* gamestartnotification) {
  clear_body();
  if (gamestartnotification) {
    set_has_gamestartnotification();
    body_.gamestartnotification_ = gamestartnotification;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.gamestartnotification)
}

// optional .bombplane_proto.BombRequest bombrequest = 405;
inline bool Message::has_bombrequest() const {
  return body_case() == kBombrequest;
}
inline void Message::set_has_bombrequest() {
  _oneof_case_[0] = kBombrequest;
}
inline void Message::clear_bombrequest() {
  if (has_bombrequest()) {
    delete body_.bombrequest_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::BombRequest& Message::bombrequest() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.bombrequest)
  return has_bombrequest()
      ? *body_.bombrequest_
      : ::bombplane_proto::BombRequest::default_instance();
}
inline ::bombplane_proto::BombRequest* Message::mutable_bombrequest() {
  if (!has_bombrequest()) {
    clear_body();
    set_has_bombrequest();
    body_.bombrequest_ = new ::bombplane_proto::BombRequest;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.bombrequest)
  return body_.bombrequest_;
}
inline ::bombplane_proto::BombRequest* Message::release_bombrequest() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.bombrequest)
  if (has_bombrequest()) {
    clear_has_body();
    ::bombplane_proto::BombRequest* temp = body_.bombrequest_;
    body_.bombrequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_bombrequest(::bombplane_proto::BombRequest* bombrequest) {
  clear_body();
  if (bombrequest) {
    set_has_bombrequest();
    body_.bombrequest_ = bombrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.bombrequest)
}

// optional .bombplane_proto.BombResponse bombresponse = 406;
inline bool Message::has_bombresponse() const {
  return body_case() == kBombresponse;
}
inline void Message::set_has_bombresponse() {
  _oneof_case_[0] = kBombresponse;
}
inline void Message::clear_bombresponse() {
  if (has_bombresponse()) {
    delete body_.bombresponse_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::BombResponse& Message::bombresponse() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.bombresponse)
  return has_bombresponse()
      ? *body_.bombresponse_
      : ::bombplane_proto::BombResponse::default_instance();
}
inline ::bombplane_proto::BombResponse* Message::mutable_bombresponse() {
  if (!has_bombresponse()) {
    clear_body();
    set_has_bombresponse();
    body_.bombresponse_ = new ::bombplane_proto::BombResponse;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.bombresponse)
  return body_.bombresponse_;
}
inline ::bombplane_proto::BombResponse* Message::release_bombresponse() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.bombresponse)
  if (has_bombresponse()) {
    clear_has_body();
    ::bombplane_proto::BombResponse* temp = body_.bombresponse_;
    body_.bombresponse_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_bombresponse(::bombplane_proto::BombResponse* bombresponse) {
  clear_body();
  if (bombresponse) {
    set_has_bombresponse();
    body_.bombresponse_ = bombresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.bombresponse)
}

// optional .bombplane_proto.GuessRequest guessrequest = 407;
inline bool Message::has_guessrequest() const {
  return body_case() == kGuessrequest;
}
inline void Message::set_has_guessrequest() {
  _oneof_case_[0] = kGuessrequest;
}
inline void Message::clear_guessrequest() {
  if (has_guessrequest()) {
    delete body_.guessrequest_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::GuessRequest& Message::guessrequest() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.guessrequest)
  return has_guessrequest()
      ? *body_.guessrequest_
      : ::bombplane_proto::GuessRequest::default_instance();
}
inline ::bombplane_proto::GuessRequest* Message::mutable_guessrequest() {
  if (!has_guessrequest()) {
    clear_body();
    set_has_guessrequest();
    body_.guessrequest_ = new ::bombplane_proto::GuessRequest;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.guessrequest)
  return body_.guessrequest_;
}
inline ::bombplane_proto::GuessRequest* Message::release_guessrequest() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.guessrequest)
  if (has_guessrequest()) {
    clear_has_body();
    ::bombplane_proto::GuessRequest* temp = body_.guessrequest_;
    body_.guessrequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_guessrequest(::bombplane_proto::GuessRequest* guessrequest) {
  clear_body();
  if (guessrequest) {
    set_has_guessrequest();
    body_.guessrequest_ = guessrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.guessrequest)
}

// optional .bombplane_proto.GuessResponse guessresponse = 408;
inline bool Message::has_guessresponse() const {
  return body_case() == kGuessresponse;
}
inline void Message::set_has_guessresponse() {
  _oneof_case_[0] = kGuessresponse;
}
inline void Message::clear_guessresponse() {
  if (has_guessresponse()) {
    delete body_.guessresponse_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::GuessResponse& Message::guessresponse() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.guessresponse)
  return has_guessresponse()
      ? *body_.guessresponse_
      : ::bombplane_proto::GuessResponse::default_instance();
}
inline ::bombplane_proto::GuessResponse* Message::mutable_guessresponse() {
  if (!has_guessresponse()) {
    clear_body();
    set_has_guessresponse();
    body_.guessresponse_ = new ::bombplane_proto::GuessResponse;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.guessresponse)
  return body_.guessresponse_;
}
inline ::bombplane_proto::GuessResponse* Message::release_guessresponse() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.guessresponse)
  if (has_guessresponse()) {
    clear_has_body();
    ::bombplane_proto::GuessResponse* temp = body_.guessresponse_;
    body_.guessresponse_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_guessresponse(::bombplane_proto::GuessResponse* guessresponse) {
  clear_body();
  if (guessresponse) {
    set_has_guessresponse();
    body_.guessresponse_ = guessresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.guessresponse)
}

// optional .bombplane_proto.GameoverNotification gameovernotification = 409;
inline bool Message::has_gameovernotification() const {
  return body_case() == kGameovernotification;
}
inline void Message::set_has_gameovernotification() {
  _oneof_case_[0] = kGameovernotification;
}
inline void Message::clear_gameovernotification() {
  if (has_gameovernotification()) {
    delete body_.gameovernotification_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::GameoverNotification& Message::gameovernotification() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.gameovernotification)
  return has_gameovernotification()
      ? *body_.gameovernotification_
      : ::bombplane_proto::GameoverNotification::default_instance();
}
inline ::bombplane_proto::GameoverNotification* Message::mutable_gameovernotification() {
  if (!has_gameovernotification()) {
    clear_body();
    set_has_gameovernotification();
    body_.gameovernotification_ = new ::bombplane_proto::GameoverNotification;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.gameovernotification)
  return body_.gameovernotification_;
}
inline ::bombplane_proto::GameoverNotification* Message::release_gameovernotification() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.gameovernotification)
  if (has_gameovernotification()) {
    clear_has_body();
    ::bombplane_proto::GameoverNotification* temp = body_.gameovernotification_;
    body_.gameovernotification_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_gameovernotification(::bombplane_proto::GameoverNotification* gameovernotification) {
  clear_body();
  if (gameovernotification) {
    set_has_gameovernotification();
    body_.gameovernotification_ = gameovernotification;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.gameovernotification)
}

// optional .bombplane_proto.GamecrushNotification gamecrushnotification = 410;
inline bool Message::has_gamecrushnotification() const {
  return body_case() == kGamecrushnotification;
}
inline void Message::set_has_gamecrushnotification() {
  _oneof_case_[0] = kGamecrushnotification;
}
inline void Message::clear_gamecrushnotification() {
  if (has_gamecrushnotification()) {
    delete body_.gamecrushnotification_;
    clear_has_body();
  }
}
inline  const ::bombplane_proto::GamecrushNotification& Message::gamecrushnotification() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.gamecrushnotification)
  return has_gamecrushnotification()
      ? *body_.gamecrushnotification_
      : ::bombplane_proto::GamecrushNotification::default_instance();
}
inline ::bombplane_proto::GamecrushNotification* Message::mutable_gamecrushnotification() {
  if (!has_gamecrushnotification()) {
    clear_body();
    set_has_gamecrushnotification();
    body_.gamecrushnotification_ = new ::bombplane_proto::GamecrushNotification;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.gamecrushnotification)
  return body_.gamecrushnotification_;
}
inline ::bombplane_proto::GamecrushNotification* Message::release_gamecrushnotification() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.gamecrushnotification)
  if (has_gamecrushnotification()) {
    clear_has_body();
    ::bombplane_proto::GamecrushNotification* temp = body_.gamecrushnotification_;
    body_.gamecrushnotification_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_gamecrushnotification(::bombplane_proto::GamecrushNotification* gamecrushnotification) {
  clear_body();
  if (gamecrushnotification) {
    set_has_gamecrushnotification();
    body_.gamecrushnotification_ = gamecrushnotification;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.gamecrushnotification)
}

inline bool Message::has_body() const {
  return body_case() != BODY_NOT_SET;
}
inline void Message::clear_has_body() {
  _oneof_case_[0] = BODY_NOT_SET;
}
inline Message::BodyCase Message::body_case() const {
  return Message::BodyCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// LoginRequest

// optional bytes username = 1;
inline void LoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::username() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.LoginRequest.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bombplane_proto.LoginRequest.username)
}
inline void LoginRequest::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bombplane_proto.LoginRequest.username)
}
inline void LoginRequest::set_username(const void* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bombplane_proto.LoginRequest.username)
}
inline ::std::string* LoginRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:bombplane_proto.LoginRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:bombplane_proto.LoginRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.LoginRequest.username)
}

// optional bytes password = 2;
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.LoginRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bombplane_proto.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bombplane_proto.LoginRequest.password)
}
inline void LoginRequest::set_password(const void* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bombplane_proto.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:bombplane_proto.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:bombplane_proto.LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.LoginRequest.password)
}

// -------------------------------------------------------------------

// LoginResponse

// optional .bombplane_proto.LoginResponse.LoginState state = 1;
inline void LoginResponse::clear_state() {
  state_ = 0;
}
inline ::bombplane_proto::LoginResponse_LoginState LoginResponse::state() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.LoginResponse.state)
  return static_cast< ::bombplane_proto::LoginResponse_LoginState >(state_);
}
inline void LoginResponse::set_state(::bombplane_proto::LoginResponse_LoginState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.LoginResponse.state)
}

// optional int32 userid = 2;
inline void LoginResponse::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 LoginResponse::userid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.LoginResponse.userid)
  return userid_;
}
inline void LoginResponse::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.LoginResponse.userid)
}

// -------------------------------------------------------------------

// OnlineUser

// optional bytes username = 1;
inline void OnlineUser::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnlineUser::username() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.OnlineUser.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnlineUser::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bombplane_proto.OnlineUser.username)
}
inline void OnlineUser::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bombplane_proto.OnlineUser.username)
}
inline void OnlineUser::set_username(const void* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bombplane_proto.OnlineUser.username)
}
inline ::std::string* OnlineUser::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:bombplane_proto.OnlineUser.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnlineUser::release_username() {
  // @@protoc_insertion_point(field_release:bombplane_proto.OnlineUser.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnlineUser::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.OnlineUser.username)
}

// optional int32 userid = 2;
inline void OnlineUser::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 OnlineUser::userid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.OnlineUser.userid)
  return userid_;
}
inline void OnlineUser::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.OnlineUser.userid)
}

// optional bool inroom = 3;
inline void OnlineUser::clear_inroom() {
  inroom_ = false;
}
inline bool OnlineUser::inroom() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.OnlineUser.inroom)
  return inroom_;
}
inline void OnlineUser::set_inroom(bool value) {
  
  inroom_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.OnlineUser.inroom)
}

// -------------------------------------------------------------------

// OnlinelistNotification

// repeated .bombplane_proto.OnlineUser onlinelist = 1;
inline int OnlinelistNotification::onlinelist_size() const {
  return onlinelist_.size();
}
inline void OnlinelistNotification::clear_onlinelist() {
  onlinelist_.Clear();
}
inline const ::bombplane_proto::OnlineUser& OnlinelistNotification::onlinelist(int index) const {
  // @@protoc_insertion_point(field_get:bombplane_proto.OnlinelistNotification.onlinelist)
  return onlinelist_.Get(index);
}
inline ::bombplane_proto::OnlineUser* OnlinelistNotification::mutable_onlinelist(int index) {
  // @@protoc_insertion_point(field_mutable:bombplane_proto.OnlinelistNotification.onlinelist)
  return onlinelist_.Mutable(index);
}
inline ::bombplane_proto::OnlineUser* OnlinelistNotification::add_onlinelist() {
  // @@protoc_insertion_point(field_add:bombplane_proto.OnlinelistNotification.onlinelist)
  return onlinelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bombplane_proto::OnlineUser >*
OnlinelistNotification::mutable_onlinelist() {
  // @@protoc_insertion_point(field_mutable_list:bombplane_proto.OnlinelistNotification.onlinelist)
  return &onlinelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bombplane_proto::OnlineUser >&
OnlinelistNotification::onlinelist() const {
  // @@protoc_insertion_point(field_list:bombplane_proto.OnlinelistNotification.onlinelist)
  return onlinelist_;
}

// -------------------------------------------------------------------

// UpdateonlineBroadcast

// optional bytes username = 1;
inline void UpdateonlineBroadcast::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateonlineBroadcast::username() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateonlineBroadcast.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateonlineBroadcast::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateonlineBroadcast.username)
}
inline void UpdateonlineBroadcast::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bombplane_proto.UpdateonlineBroadcast.username)
}
inline void UpdateonlineBroadcast::set_username(const void* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bombplane_proto.UpdateonlineBroadcast.username)
}
inline ::std::string* UpdateonlineBroadcast::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:bombplane_proto.UpdateonlineBroadcast.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateonlineBroadcast::release_username() {
  // @@protoc_insertion_point(field_release:bombplane_proto.UpdateonlineBroadcast.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateonlineBroadcast::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.UpdateonlineBroadcast.username)
}

// optional int32 userid = 2;
inline void UpdateonlineBroadcast::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 UpdateonlineBroadcast::userid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateonlineBroadcast.userid)
  return userid_;
}
inline void UpdateonlineBroadcast::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateonlineBroadcast.userid)
}

// optional bool online = 3;
inline void UpdateonlineBroadcast::clear_online() {
  online_ = false;
}
inline bool UpdateonlineBroadcast::online() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateonlineBroadcast.online)
  return online_;
}
inline void UpdateonlineBroadcast::set_online(bool value) {
  
  online_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateonlineBroadcast.online)
}

// -------------------------------------------------------------------

// InviteRequest

// optional int32 srcuserid = 1;
inline void InviteRequest::clear_srcuserid() {
  srcuserid_ = 0;
}
inline ::google::protobuf::int32 InviteRequest::srcuserid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InviteRequest.srcuserid)
  return srcuserid_;
}
inline void InviteRequest::set_srcuserid(::google::protobuf::int32 value) {
  
  srcuserid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.InviteRequest.srcuserid)
}

// optional int32 dstuserid = 2;
inline void InviteRequest::clear_dstuserid() {
  dstuserid_ = 0;
}
inline ::google::protobuf::int32 InviteRequest::dstuserid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InviteRequest.dstuserid)
  return dstuserid_;
}
inline void InviteRequest::set_dstuserid(::google::protobuf::int32 value) {
  
  dstuserid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.InviteRequest.dstuserid)
}

// -------------------------------------------------------------------

// InviteResponse

// optional int32 srcuserid = 1;
inline void InviteResponse::clear_srcuserid() {
  srcuserid_ = 0;
}
inline ::google::protobuf::int32 InviteResponse::srcuserid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InviteResponse.srcuserid)
  return srcuserid_;
}
inline void InviteResponse::set_srcuserid(::google::protobuf::int32 value) {
  
  srcuserid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.InviteResponse.srcuserid)
}

// optional bool accept = 2;
inline void InviteResponse::clear_accept() {
  accept_ = false;
}
inline bool InviteResponse::accept() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InviteResponse.accept)
  return accept_;
}
inline void InviteResponse::set_accept(bool value) {
  
  accept_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.InviteResponse.accept)
}

// -------------------------------------------------------------------

// UpdateroomBroadcast

// optional int32 userid1 = 1;
inline void UpdateroomBroadcast::clear_userid1() {
  userid1_ = 0;
}
inline ::google::protobuf::int32 UpdateroomBroadcast::userid1() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateroomBroadcast.userid1)
  return userid1_;
}
inline void UpdateroomBroadcast::set_userid1(::google::protobuf::int32 value) {
  
  userid1_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateroomBroadcast.userid1)
}

// optional int32 userid2 = 2;
inline void UpdateroomBroadcast::clear_userid2() {
  userid2_ = 0;
}
inline ::google::protobuf::int32 UpdateroomBroadcast::userid2() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateroomBroadcast.userid2)
  return userid2_;
}
inline void UpdateroomBroadcast::set_userid2(::google::protobuf::int32 value) {
  
  userid2_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateroomBroadcast.userid2)
}

// optional bool inout = 3;
inline void UpdateroomBroadcast::clear_inout() {
  inout_ = false;
}
inline bool UpdateroomBroadcast::inout() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateroomBroadcast.inout)
  return inout_;
}
inline void UpdateroomBroadcast::set_inout(bool value) {
  
  inout_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateroomBroadcast.inout)
}

// -------------------------------------------------------------------

// Coordinate

// optional int32 x = 1;
inline void Coordinate::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Coordinate::x() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Coordinate.x)
  return x_;
}
inline void Coordinate::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.Coordinate.x)
}

// optional int32 y = 2;
inline void Coordinate::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Coordinate::y() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Coordinate.y)
  return y_;
}
inline void Coordinate::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.Coordinate.y)
}

// -------------------------------------------------------------------

// PlaneLocator

// optional .bombplane_proto.Coordinate pos1 = 1;
inline bool PlaneLocator::has_pos1() const {
  return !_is_default_instance_ && pos1_ != NULL;
}
inline void PlaneLocator::clear_pos1() {
  if (GetArenaNoVirtual() == NULL && pos1_ != NULL) delete pos1_;
  pos1_ = NULL;
}
inline const ::bombplane_proto::Coordinate& PlaneLocator::pos1() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.PlaneLocator.pos1)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return pos1_ != NULL ? *pos1_ : *default_instance().pos1_;
#else
  return pos1_ != NULL ? *pos1_ : *default_instance_->pos1_;
#endif
}
inline ::bombplane_proto::Coordinate* PlaneLocator::mutable_pos1() {
  
  if (pos1_ == NULL) {
    pos1_ = new ::bombplane_proto::Coordinate;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.PlaneLocator.pos1)
  return pos1_;
}
inline ::bombplane_proto::Coordinate* PlaneLocator::release_pos1() {
  // @@protoc_insertion_point(field_release:bombplane_proto.PlaneLocator.pos1)
  
  ::bombplane_proto::Coordinate* temp = pos1_;
  pos1_ = NULL;
  return temp;
}
inline void PlaneLocator::set_allocated_pos1(::bombplane_proto::Coordinate* pos1) {
  delete pos1_;
  pos1_ = pos1;
  if (pos1) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.PlaneLocator.pos1)
}

// optional .bombplane_proto.Coordinate pos2 = 2;
inline bool PlaneLocator::has_pos2() const {
  return !_is_default_instance_ && pos2_ != NULL;
}
inline void PlaneLocator::clear_pos2() {
  if (GetArenaNoVirtual() == NULL && pos2_ != NULL) delete pos2_;
  pos2_ = NULL;
}
inline const ::bombplane_proto::Coordinate& PlaneLocator::pos2() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.PlaneLocator.pos2)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return pos2_ != NULL ? *pos2_ : *default_instance().pos2_;
#else
  return pos2_ != NULL ? *pos2_ : *default_instance_->pos2_;
#endif
}
inline ::bombplane_proto::Coordinate* PlaneLocator::mutable_pos2() {
  
  if (pos2_ == NULL) {
    pos2_ = new ::bombplane_proto::Coordinate;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.PlaneLocator.pos2)
  return pos2_;
}
inline ::bombplane_proto::Coordinate* PlaneLocator::release_pos2() {
  // @@protoc_insertion_point(field_release:bombplane_proto.PlaneLocator.pos2)
  
  ::bombplane_proto::Coordinate* temp = pos2_;
  pos2_ = NULL;
  return temp;
}
inline void PlaneLocator::set_allocated_pos2(::bombplane_proto::Coordinate* pos2) {
  delete pos2_;
  pos2_ = pos2;
  if (pos2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.PlaneLocator.pos2)
}

// optional .bombplane_proto.Coordinate pos3 = 3;
inline bool PlaneLocator::has_pos3() const {
  return !_is_default_instance_ && pos3_ != NULL;
}
inline void PlaneLocator::clear_pos3() {
  if (GetArenaNoVirtual() == NULL && pos3_ != NULL) delete pos3_;
  pos3_ = NULL;
}
inline const ::bombplane_proto::Coordinate& PlaneLocator::pos3() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.PlaneLocator.pos3)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return pos3_ != NULL ? *pos3_ : *default_instance().pos3_;
#else
  return pos3_ != NULL ? *pos3_ : *default_instance_->pos3_;
#endif
}
inline ::bombplane_proto::Coordinate* PlaneLocator::mutable_pos3() {
  
  if (pos3_ == NULL) {
    pos3_ = new ::bombplane_proto::Coordinate;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.PlaneLocator.pos3)
  return pos3_;
}
inline ::bombplane_proto::Coordinate* PlaneLocator::release_pos3() {
  // @@protoc_insertion_point(field_release:bombplane_proto.PlaneLocator.pos3)
  
  ::bombplane_proto::Coordinate* temp = pos3_;
  pos3_ = NULL;
  return temp;
}
inline void PlaneLocator::set_allocated_pos3(::bombplane_proto::Coordinate* pos3) {
  delete pos3_;
  pos3_ = pos3;
  if (pos3) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.PlaneLocator.pos3)
}

// -------------------------------------------------------------------

// InitposNotification

// optional .bombplane_proto.PlaneLocator loc1 = 1;
inline bool InitposNotification::has_loc1() const {
  return !_is_default_instance_ && loc1_ != NULL;
}
inline void InitposNotification::clear_loc1() {
  if (GetArenaNoVirtual() == NULL && loc1_ != NULL) delete loc1_;
  loc1_ = NULL;
}
inline const ::bombplane_proto::PlaneLocator& InitposNotification::loc1() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InitposNotification.loc1)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return loc1_ != NULL ? *loc1_ : *default_instance().loc1_;
#else
  return loc1_ != NULL ? *loc1_ : *default_instance_->loc1_;
#endif
}
inline ::bombplane_proto::PlaneLocator* InitposNotification::mutable_loc1() {
  
  if (loc1_ == NULL) {
    loc1_ = new ::bombplane_proto::PlaneLocator;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.InitposNotification.loc1)
  return loc1_;
}
inline ::bombplane_proto::PlaneLocator* InitposNotification::release_loc1() {
  // @@protoc_insertion_point(field_release:bombplane_proto.InitposNotification.loc1)
  
  ::bombplane_proto::PlaneLocator* temp = loc1_;
  loc1_ = NULL;
  return temp;
}
inline void InitposNotification::set_allocated_loc1(::bombplane_proto::PlaneLocator* loc1) {
  delete loc1_;
  loc1_ = loc1;
  if (loc1) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.InitposNotification.loc1)
}

// optional .bombplane_proto.PlaneLocator loc2 = 2;
inline bool InitposNotification::has_loc2() const {
  return !_is_default_instance_ && loc2_ != NULL;
}
inline void InitposNotification::clear_loc2() {
  if (GetArenaNoVirtual() == NULL && loc2_ != NULL) delete loc2_;
  loc2_ = NULL;
}
inline const ::bombplane_proto::PlaneLocator& InitposNotification::loc2() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InitposNotification.loc2)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return loc2_ != NULL ? *loc2_ : *default_instance().loc2_;
#else
  return loc2_ != NULL ? *loc2_ : *default_instance_->loc2_;
#endif
}
inline ::bombplane_proto::PlaneLocator* InitposNotification::mutable_loc2() {
  
  if (loc2_ == NULL) {
    loc2_ = new ::bombplane_proto::PlaneLocator;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.InitposNotification.loc2)
  return loc2_;
}
inline ::bombplane_proto::PlaneLocator* InitposNotification::release_loc2() {
  // @@protoc_insertion_point(field_release:bombplane_proto.InitposNotification.loc2)
  
  ::bombplane_proto::PlaneLocator* temp = loc2_;
  loc2_ = NULL;
  return temp;
}
inline void InitposNotification::set_allocated_loc2(::bombplane_proto::PlaneLocator* loc2) {
  delete loc2_;
  loc2_ = loc2;
  if (loc2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.InitposNotification.loc2)
}

// optional .bombplane_proto.PlaneLocator loc3 = 3;
inline bool InitposNotification::has_loc3() const {
  return !_is_default_instance_ && loc3_ != NULL;
}
inline void InitposNotification::clear_loc3() {
  if (GetArenaNoVirtual() == NULL && loc3_ != NULL) delete loc3_;
  loc3_ = NULL;
}
inline const ::bombplane_proto::PlaneLocator& InitposNotification::loc3() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InitposNotification.loc3)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return loc3_ != NULL ? *loc3_ : *default_instance().loc3_;
#else
  return loc3_ != NULL ? *loc3_ : *default_instance_->loc3_;
#endif
}
inline ::bombplane_proto::PlaneLocator* InitposNotification::mutable_loc3() {
  
  if (loc3_ == NULL) {
    loc3_ = new ::bombplane_proto::PlaneLocator;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.InitposNotification.loc3)
  return loc3_;
}
inline ::bombplane_proto::PlaneLocator* InitposNotification::release_loc3() {
  // @@protoc_insertion_point(field_release:bombplane_proto.InitposNotification.loc3)
  
  ::bombplane_proto::PlaneLocator* temp = loc3_;
  loc3_ = NULL;
  return temp;
}
inline void InitposNotification::set_allocated_loc3(::bombplane_proto::PlaneLocator* loc3) {
  delete loc3_;
  loc3_ = loc3;
  if (loc3) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.InitposNotification.loc3)
}

// -------------------------------------------------------------------

// GamestartNotification

// optional int32 userid = 1;
inline void GamestartNotification::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 GamestartNotification::userid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.GamestartNotification.userid)
  return userid_;
}
inline void GamestartNotification::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.GamestartNotification.userid)
}

// -------------------------------------------------------------------

// BombRequest

// optional .bombplane_proto.Coordinate pos = 1;
inline bool BombRequest::has_pos() const {
  return !_is_default_instance_ && pos_ != NULL;
}
inline void BombRequest::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::bombplane_proto::Coordinate& BombRequest::pos() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.BombRequest.pos)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return pos_ != NULL ? *pos_ : *default_instance().pos_;
#else
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
#endif
}
inline ::bombplane_proto::Coordinate* BombRequest::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::bombplane_proto::Coordinate;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.BombRequest.pos)
  return pos_;
}
inline ::bombplane_proto::Coordinate* BombRequest::release_pos() {
  // @@protoc_insertion_point(field_release:bombplane_proto.BombRequest.pos)
  
  ::bombplane_proto::Coordinate* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void BombRequest::set_allocated_pos(::bombplane_proto::Coordinate* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.BombRequest.pos)
}

// -------------------------------------------------------------------

// BombResponse

// optional .bombplane_proto.BombResponse.BOMB_RESULT res = 1;
inline void BombResponse::clear_res() {
  res_ = 0;
}
inline ::bombplane_proto::BombResponse_BOMB_RESULT BombResponse::res() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.BombResponse.res)
  return static_cast< ::bombplane_proto::BombResponse_BOMB_RESULT >(res_);
}
inline void BombResponse::set_res(::bombplane_proto::BombResponse_BOMB_RESULT value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.BombResponse.res)
}

// optional .bombplane_proto.Coordinate pos = 2;
inline bool BombResponse::has_pos() const {
  return !_is_default_instance_ && pos_ != NULL;
}
inline void BombResponse::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::bombplane_proto::Coordinate& BombResponse::pos() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.BombResponse.pos)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return pos_ != NULL ? *pos_ : *default_instance().pos_;
#else
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
#endif
}
inline ::bombplane_proto::Coordinate* BombResponse::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::bombplane_proto::Coordinate;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.BombResponse.pos)
  return pos_;
}
inline ::bombplane_proto::Coordinate* BombResponse::release_pos() {
  // @@protoc_insertion_point(field_release:bombplane_proto.BombResponse.pos)
  
  ::bombplane_proto::Coordinate* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void BombResponse::set_allocated_pos(::bombplane_proto::Coordinate* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.BombResponse.pos)
}

// -------------------------------------------------------------------

// GuessRequest

// optional .bombplane_proto.PlaneLocator loc = 1;
inline bool GuessRequest::has_loc() const {
  return !_is_default_instance_ && loc_ != NULL;
}
inline void GuessRequest::clear_loc() {
  if (GetArenaNoVirtual() == NULL && loc_ != NULL) delete loc_;
  loc_ = NULL;
}
inline const ::bombplane_proto::PlaneLocator& GuessRequest::loc() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.GuessRequest.loc)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return loc_ != NULL ? *loc_ : *default_instance().loc_;
#else
  return loc_ != NULL ? *loc_ : *default_instance_->loc_;
#endif
}
inline ::bombplane_proto::PlaneLocator* GuessRequest::mutable_loc() {
  
  if (loc_ == NULL) {
    loc_ = new ::bombplane_proto::PlaneLocator;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.GuessRequest.loc)
  return loc_;
}
inline ::bombplane_proto::PlaneLocator* GuessRequest::release_loc() {
  // @@protoc_insertion_point(field_release:bombplane_proto.GuessRequest.loc)
  
  ::bombplane_proto::PlaneLocator* temp = loc_;
  loc_ = NULL;
  return temp;
}
inline void GuessRequest::set_allocated_loc(::bombplane_proto::PlaneLocator* loc) {
  delete loc_;
  loc_ = loc;
  if (loc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.GuessRequest.loc)
}

// -------------------------------------------------------------------

// GuessResponse

// optional bool destroyed = 1;
inline void GuessResponse::clear_destroyed() {
  destroyed_ = false;
}
inline bool GuessResponse::destroyed() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.GuessResponse.destroyed)
  return destroyed_;
}
inline void GuessResponse::set_destroyed(bool value) {
  
  destroyed_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.GuessResponse.destroyed)
}

// optional .bombplane_proto.PlaneLocator loc = 2;
inline bool GuessResponse::has_loc() const {
  return !_is_default_instance_ && loc_ != NULL;
}
inline void GuessResponse::clear_loc() {
  if (GetArenaNoVirtual() == NULL && loc_ != NULL) delete loc_;
  loc_ = NULL;
}
inline const ::bombplane_proto::PlaneLocator& GuessResponse::loc() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.GuessResponse.loc)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return loc_ != NULL ? *loc_ : *default_instance().loc_;
#else
  return loc_ != NULL ? *loc_ : *default_instance_->loc_;
#endif
}
inline ::bombplane_proto::PlaneLocator* GuessResponse::mutable_loc() {
  
  if (loc_ == NULL) {
    loc_ = new ::bombplane_proto::PlaneLocator;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.GuessResponse.loc)
  return loc_;
}
inline ::bombplane_proto::PlaneLocator* GuessResponse::release_loc() {
  // @@protoc_insertion_point(field_release:bombplane_proto.GuessResponse.loc)
  
  ::bombplane_proto::PlaneLocator* temp = loc_;
  loc_ = NULL;
  return temp;
}
inline void GuessResponse::set_allocated_loc(::bombplane_proto::PlaneLocator* loc) {
  delete loc_;
  loc_ = loc;
  if (loc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.GuessResponse.loc)
}

// -------------------------------------------------------------------

// GameoverNotification

// optional int32 winnerid = 1;
inline void GameoverNotification::clear_winnerid() {
  winnerid_ = 0;
}
inline ::google::protobuf::int32 GameoverNotification::winnerid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.GameoverNotification.winnerid)
  return winnerid_;
}
inline void GameoverNotification::set_winnerid(::google::protobuf::int32 value) {
  
  winnerid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.GameoverNotification.winnerid)
}

// -------------------------------------------------------------------

// GamecrushNotification

// optional .bombplane_proto.GamecrushNotification.CrushReason reason = 1;
inline void GamecrushNotification::clear_reason() {
  reason_ = 0;
}
inline ::bombplane_proto::GamecrushNotification_CrushReason GamecrushNotification::reason() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.GamecrushNotification.reason)
  return static_cast< ::bombplane_proto::GamecrushNotification_CrushReason >(reason_);
}
inline void GamecrushNotification::set_reason(::bombplane_proto::GamecrushNotification_CrushReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.GamecrushNotification.reason)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bombplane_proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::bombplane_proto::LoginResponse_LoginState> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::bombplane_proto::BombResponse_BOMB_RESULT> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::bombplane_proto::GamecrushNotification_CrushReason> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::bombplane_proto::Type> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BombPlane_5fproto_2eproto__INCLUDED
